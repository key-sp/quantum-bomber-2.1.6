// <auto-generated>
// This code was auto-generated by a tool, every time
// the tool executes this code will be reset.
// </auto-generated>

namespace Quantum.Editor {
  using Quantum;
  using UnityEngine;
  using UnityEditor;

  [CustomPropertyDrawer(typeof(AssetRefAIAction))]
  public class AssetRefAIActionPropertyDrawer : PropertyDrawer {
    public override void OnGUI(Rect position, SerializedProperty property, GUIContent label) {
      AssetRefDrawer.DrawAssetRefSelector(position, property, label, typeof(AIActionAsset));
    }
  }

  [CustomPropertyDrawer(typeof(AssetRefAIBlackboard))]
  public class AssetRefAIBlackboardPropertyDrawer : PropertyDrawer {
    public override void OnGUI(Rect position, SerializedProperty property, GUIContent label) {
      AssetRefDrawer.DrawAssetRefSelector(position, property, label, typeof(AIBlackboardAsset));
    }
  }

  [CustomPropertyDrawer(typeof(AssetRefAIBlackboardInitializer))]
  public class AssetRefAIBlackboardInitializerPropertyDrawer : PropertyDrawer {
    public override void OnGUI(Rect position, SerializedProperty property, GUIContent label) {
      AssetRefDrawer.DrawAssetRefSelector(position, property, label, typeof(AIBlackboardInitializerAsset));
    }
  }

  [CustomPropertyDrawer(typeof(AssetRefAIConfig))]
  public class AssetRefAIConfigPropertyDrawer : PropertyDrawer {
    public override void OnGUI(Rect position, SerializedProperty property, GUIContent label) {
      AssetRefDrawer.DrawAssetRefSelector(position, property, label, typeof(AIConfigAsset));
    }
  }

  [CustomPropertyDrawer(typeof(AssetRefAIFunction))]
  public class AssetRefAIFunctionPropertyDrawer : PropertyDrawer {
    public override void OnGUI(Rect position, SerializedProperty property, GUIContent label) {
      AssetRefDrawer.DrawAssetRefSelector(position, property, label, typeof(AIFunctionAsset));
    }
  }

  [CustomPropertyDrawer(typeof(AssetRefAbilityPlaceBombConfig))]
  public class AssetRefAbilityPlaceBombConfigPropertyDrawer : PropertyDrawer {
    public override void OnGUI(Rect position, SerializedProperty property, GUIContent label) {
      AssetRefDrawer.DrawAssetRefSelector(position, property, label, typeof(AbilityPlaceBombConfigAsset));
    }
  }

  [CustomPropertyDrawer(typeof(AssetRefBTComposite))]
  public class AssetRefBTCompositePropertyDrawer : PropertyDrawer {
    public override void OnGUI(Rect position, SerializedProperty property, GUIContent label) {
      AssetRefDrawer.DrawAssetRefSelector(position, property, label, typeof(BTCompositeAsset));
    }
  }

  [CustomPropertyDrawer(typeof(AssetRefBTDecorator))]
  public class AssetRefBTDecoratorPropertyDrawer : PropertyDrawer {
    public override void OnGUI(Rect position, SerializedProperty property, GUIContent label) {
      AssetRefDrawer.DrawAssetRefSelector(position, property, label, typeof(BTDecoratorAsset));
    }
  }

  [CustomPropertyDrawer(typeof(AssetRefBTNode))]
  public class AssetRefBTNodePropertyDrawer : PropertyDrawer {
    public override void OnGUI(Rect position, SerializedProperty property, GUIContent label) {
      AssetRefDrawer.DrawAssetRefSelector(position, property, label, typeof(BTNodeAsset));
    }
  }

  [CustomPropertyDrawer(typeof(AssetRefBTRoot))]
  public class AssetRefBTRootPropertyDrawer : PropertyDrawer {
    public override void OnGUI(Rect position, SerializedProperty property, GUIContent label) {
      AssetRefDrawer.DrawAssetRefSelector(position, property, label, typeof(BTRootAsset));
    }
  }

  [CustomPropertyDrawer(typeof(AssetRefBTService))]
  public class AssetRefBTServicePropertyDrawer : PropertyDrawer {
    public override void OnGUI(Rect position, SerializedProperty property, GUIContent label) {
      AssetRefDrawer.DrawAssetRefSelector(position, property, label, typeof(BTServiceAsset));
    }
  }

  [CustomPropertyDrawer(typeof(AssetRefBombConfig))]
  public class AssetRefBombConfigPropertyDrawer : PropertyDrawer {
    public override void OnGUI(Rect position, SerializedProperty property, GUIContent label) {
      AssetRefDrawer.DrawAssetRefSelector(position, property, label, typeof(BombConfigAsset));
    }
  }

  [CustomPropertyDrawer(typeof(AssetRefBomberConfig))]
  public class AssetRefBomberConfigPropertyDrawer : PropertyDrawer {
    public override void OnGUI(Rect position, SerializedProperty property, GUIContent label) {
      AssetRefDrawer.DrawAssetRefSelector(position, property, label, typeof(BomberConfigAsset));
    }
  }

  [CustomPropertyDrawer(typeof(AssetRefConsideration))]
  public class AssetRefConsiderationPropertyDrawer : PropertyDrawer {
    public override void OnGUI(Rect position, SerializedProperty property, GUIContent label) {
      AssetRefDrawer.DrawAssetRefSelector(position, property, label, typeof(ConsiderationAsset));
    }
  }

  [CustomPropertyDrawer(typeof(AssetRefGOAPAction))]
  public class AssetRefGOAPActionPropertyDrawer : PropertyDrawer {
    public override void OnGUI(Rect position, SerializedProperty property, GUIContent label) {
      AssetRefDrawer.DrawAssetRefSelector(position, property, label, typeof(GOAPActionAsset));
    }
  }

  [CustomPropertyDrawer(typeof(AssetRefGOAPBackValidation))]
  public class AssetRefGOAPBackValidationPropertyDrawer : PropertyDrawer {
    public override void OnGUI(Rect position, SerializedProperty property, GUIContent label) {
      AssetRefDrawer.DrawAssetRefSelector(position, property, label, typeof(GOAPBackValidationAsset));
    }
  }

  [CustomPropertyDrawer(typeof(AssetRefGOAPGoal))]
  public class AssetRefGOAPGoalPropertyDrawer : PropertyDrawer {
    public override void OnGUI(Rect position, SerializedProperty property, GUIContent label) {
      AssetRefDrawer.DrawAssetRefSelector(position, property, label, typeof(GOAPGoalAsset));
    }
  }

  [CustomPropertyDrawer(typeof(AssetRefGOAPHeuristic))]
  public class AssetRefGOAPHeuristicPropertyDrawer : PropertyDrawer {
    public override void OnGUI(Rect position, SerializedProperty property, GUIContent label) {
      AssetRefDrawer.DrawAssetRefSelector(position, property, label, typeof(GOAPHeuristicAsset));
    }
  }

  [CustomPropertyDrawer(typeof(AssetRefGOAPRoot))]
  public class AssetRefGOAPRootPropertyDrawer : PropertyDrawer {
    public override void OnGUI(Rect position, SerializedProperty property, GUIContent label) {
      AssetRefDrawer.DrawAssetRefSelector(position, property, label, typeof(GOAPRootAsset));
    }
  }

  [CustomPropertyDrawer(typeof(AssetRefHFSMDecision))]
  public class AssetRefHFSMDecisionPropertyDrawer : PropertyDrawer {
    public override void OnGUI(Rect position, SerializedProperty property, GUIContent label) {
      AssetRefDrawer.DrawAssetRefSelector(position, property, label, typeof(HFSMDecisionAsset));
    }
  }

  [CustomPropertyDrawer(typeof(AssetRefHFSMRoot))]
  public class AssetRefHFSMRootPropertyDrawer : PropertyDrawer {
    public override void OnGUI(Rect position, SerializedProperty property, GUIContent label) {
      AssetRefDrawer.DrawAssetRefSelector(position, property, label, typeof(HFSMRootAsset));
    }
  }

  [CustomPropertyDrawer(typeof(AssetRefHFSMState))]
  public class AssetRefHFSMStatePropertyDrawer : PropertyDrawer {
    public override void OnGUI(Rect position, SerializedProperty property, GUIContent label) {
      AssetRefDrawer.DrawAssetRefSelector(position, property, label, typeof(HFSMStateAsset));
    }
  }

  [CustomPropertyDrawer(typeof(AssetRefHFSMTransitionSet))]
  public class AssetRefHFSMTransitionSetPropertyDrawer : PropertyDrawer {
    public override void OnGUI(Rect position, SerializedProperty property, GUIContent label) {
      AssetRefDrawer.DrawAssetRefSelector(position, property, label, typeof(HFSMTransitionSetAsset));
    }
  }

  [CustomPropertyDrawer(typeof(AssetRefMovementConfig))]
  public class AssetRefMovementConfigPropertyDrawer : PropertyDrawer {
    public override void OnGUI(Rect position, SerializedProperty property, GUIContent label) {
      AssetRefDrawer.DrawAssetRefSelector(position, property, label, typeof(MovementConfigAsset));
    }
  }

  [CustomPropertyDrawer(typeof(AssetRefUTRoot))]
  public class AssetRefUTRootPropertyDrawer : PropertyDrawer {
    public override void OnGUI(Rect position, SerializedProperty property, GUIContent label) {
      AssetRefDrawer.DrawAssetRefSelector(position, property, label, typeof(UTRootAsset));
    }
  }

  [CustomPropertyDrawer(typeof(Quantum.Prototypes.EWorldState_Prototype))]
  [CustomPropertyDrawer(typeof(Quantum.Prototypes.GameSessionState_Prototype))]
  [CustomPropertyDrawer(typeof(Quantum.Prototypes.PowerUpType_Prototype))]
  [CustomPropertyDrawer(typeof(Quantum.Prototypes.Axis_Prototype))]
  [CustomPropertyDrawer(typeof(Quantum.Prototypes.CellType_Prototype))]
  [CustomPropertyDrawer(typeof(Quantum.Prototypes.Direction_Prototype))]
  [CustomPropertyDrawer(typeof(Quantum.Prototypes.GridType_Prototype))]
  [CustomPropertyDrawer(typeof(Quantum.Prototypes.InputButtons_Prototype))]
  partial class PrototypeDrawer {}
}
